#! /bin/sh
TOADDR="ethersex-devel@list.zerties.org"
CFLAGS="-Wall -W -Wno-unused-parameter -Wno-uninitialized -Wno-pointer-sign  -Wno-missing-field-initializers -Wno-sign-compare"

# make sure TERM is defined so that dialog will work.
[ "x$TERM" = "x" ] && TERM="linux"
export TERM

[ -e config.in ] || {
  echo "$0: This script has to be run from the Ethersex root directory."
  exit 1
}

[ "x$1" = "x" ] && {
  echo "$0: You have to run me with a config file as argument."
  exit 1
}

[ "x$TMP" = "x" ] && TMP="/tmp"

#stdout="`mktemp $TMP/stdout.XXXXX`" #; echo "stdout: $stdout"
stdout="/dev/null"
stderr="`mktemp $TMP/stderr.XXXXX`" #; echo "stderr: $stderr"

export CFLAGS
contrib/autotest/run "$1" >> "$stdout" 2>> "$stderr"

[ -s "$stderr" ] || {
  # file is empty
  rm -f "$stderr" # "$stdout" 
  exit 0
}

if [ -e ethersex.bin ]; then
  SUBJ="WARNING"
  MSG="Successfully compiled and linked the binary."
else
  SUBJ="CRITICAL"
  MSG="FAILED to compile and link the binary."
fi

#gzip --best $stdout

(cat <<EOF
To: $TOADDR
Subject: [Ethersex Autotest] $SUBJ: $1
X-Generator: $0
X-Profile: $1

$MSG

,-[ stderr ]---
EOF
perl -pe 'print "| "' "$stderr"
echo "\`--------------"
echo ""
echo "-- "
echo "This mail has been automatically generated by $0."
) | mutt -H - # -a "$stdout"

rm -f "$stderr" # "$stdout"
